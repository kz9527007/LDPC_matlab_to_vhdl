%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                          %
%           Generated by MATLAB 9.5 and Fixed-Point Designer 6.2           %
%                                                                          %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%#codegen
% file name:    bf.m
% description:  out = bf(r,H,n) performs bit-flipping decoding for an ldpc code specified by the parity-check matrix H,
%               where r is the received binary sequence, and n the number of decoding iterations.
% algorithm:    bit flipping decoding
% author:       y. jiang 
% date:         june 2010
% revision:     1.0
function out = bf_fixpt(r,iter)
 
fm = get_fimath();

flg = fi(1, 0, 1, 0, fm);
k = fi(1, 0, 1, 0, fm);

H = fi([1,1,1,0,1,0,0;
     1,1,0,1,0,1,0;
     1,0,1,1,0,0,1], 0, 1, 0, fm);
 
max = fi(0, 0, 1, 0, fm);
error = fi(zeros(1,7), 0, 1, 0, fm);

for i = fi(1, 0, 1, 0, fm):iter
    ck = fi(r*H', 0, 2, 0, fm);
    ck(:) = mod(ck,fi(2, 0, 2, 0, fm));                     %check vector, will show which equations failed

    tmp = fi(ck*H, 0, 1, 0, fm);                         % tmp lists the number of failed parity checks for each bit
    flg = any(tmp);
    

    
    for j = 1:7
       if(and(fi_toint((tmp(j) >= max)),fi_toint((tmp(j) > fi(0, 0, 1, 0, fm)))))
           max(:) = tmp(j);
           error(j) = tmp(j);
       end
    end
    
    for j = 1:7
       if(and(fi_toint((error(j) == max)),fi_toint((flg == 1))))
          r(j) ~= r(j); 
       end
    end
    

end


out  = fi(r, 0, 1, 0, fm);
end



function y = fi_toint(u)
    coder.inline( 'always' );
    if isfi( u )
        nt = numerictype( u );
        s = nt.SignednessBool;
        wl = nt.WordLength;
        y = int32( fi( u, s, wl, 0, hdlfimath ) );
    else
        y = int32( u );
    end
end

function fm = get_fimath()
	fm = fimath('RoundingMethod', 'Floor',...
	     'OverflowAction', 'Wrap',...
	     'ProductMode','FullPrecision',...
	     'MaxProductWordLength', 128,...
	     'SumMode','FullPrecision',...
	     'MaxSumWordLength', 128);
end
